{"ast":null,"code":"var _jsxFileName = \"d:\\\\ksp_devops\\\\ksp_user_devops\\\\frontend\\\\src\\\\components\\\\ChatBot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { FaRobot, FaComments, FaTimes, FaPaperPlane, FaSpinner, FaLightbulb, FaMicrophone, FaThumbsUp, FaThumbsDown, FaRegSmile, FaRegCopy, FaVolumeUp } from 'react-icons/fa';\nimport { useTranslation } from '../utils/TranslationContext';\nimport { knowledgeBase, extendedKnowledgeBase } from '../data/chatbotKnowledgeBase';\nimport { preprocessText, calculateSimilarity, detectIntent, extractEntities, generateContextualResponse } from '../utils/nlpUtils';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  const {\n    t\n  } = useTranslation();\n  const [isOpen, setIsOpen] = useState(false);\n  // Start with greeting visible by default\n  const [showGreeting, setShowGreeting] = useState(true);\n  const [messages, setMessages] = useState(() => {\n    const savedMessages = localStorage.getItem('kspChatHistory');\n    if (savedMessages) {\n      try {\n        const parsedMessages = JSON.parse(savedMessages);\n        const uniqueMessages = Array.from(new Map(parsedMessages.map(msg => [msg.id, msg])).values());\n        return uniqueMessages.map(msg => {\n          try {\n            const timestamp = msg.timestamp ? new Date(msg.timestamp) : new Date();\n            if (isNaN(timestamp.getTime())) {\n              throw new Error('Invalid timestamp');\n            }\n            return {\n              ...msg,\n              timestamp\n            };\n          } catch (err) {\n            console.warn('Invalid timestamp for message, using current time instead');\n            return {\n              ...msg,\n              timestamp: new Date()\n            };\n          }\n        });\n      } catch (error) {\n        console.error('Error parsing chat history:', error);\n        return [{\n          id: 1,\n          text: t(\"Hello! I'm KSP's AI assistant. How can I help you today?\", \"chatbot\"),\n          sender: 'bot',\n          timestamp: new Date(),\n          feedback: null,\n          reaction: null\n        }];\n      }\n    }\n    return [{\n      id: 1,\n      text: t(\"Hello! I'm KSP's AI assistant. How can I help you today?\", \"chatbot\"),\n      sender: 'bot',\n      timestamp: new Date(),\n      feedback: null,\n      reaction: null\n    }];\n  });\n  const [newMessage, setNewMessage] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const [isUserTyping, setIsUserTyping] = useState(false);\n  const [typingTimeout, setTypingTimeout] = useState(null);\n  const [isListening, setIsListening] = useState(false);\n  const [conversationContext, setConversationContext] = useState(() => {\n    const savedContext = localStorage.getItem('kspChatContext');\n    return savedContext ? JSON.parse(savedContext) : {\n      lastTopic: null,\n      userName: null,\n      recentTopics: [],\n      messageCount: 0\n    };\n  });\n  const [suggestedQuestions, setSuggestedQuestions] = useState([t(\"What products do you offer?\", \"chatbot\"), t(\"How do I place an order?\", \"chatbot\"), t(\"Tell me about your sustainability practices\", \"chatbot\")]);\n  const [showEmojiPicker, setShowEmojiPicker] = useState(null);\n  const [visibleDateMarker, setVisibleDateMarker] = useState(null);\n  const [isCopying, setIsCopying] = useState(false);\n  const messagesEndRef = useRef(null);\n  const inputRef = useRef(null);\n  const chatContainerRef = useRef(null);\n  const audioRef = useRef(new Audio('/sounds/message-received.mp3'));\n\n  // Define scrollToBottom before using it in useEffect\n  const scrollToBottom = useCallback(() => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, []);\n  useEffect(() => {\n    if (messages.length > 0) {\n      const uniqueMessages = Array.from(new Map(messages.map(msg => [msg.id, msg])).values());\n      localStorage.setItem('kspChatHistory', JSON.stringify(uniqueMessages));\n    }\n  }, [messages]);\n  useEffect(() => {\n    localStorage.setItem('kspChatContext', JSON.stringify(conversationContext));\n  }, [conversationContext]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages, scrollToBottom]);\n  useEffect(() => {\n    if (isOpen && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [isOpen]);\n  useEffect(() => {\n    if (messages.length > 1) {\n      setConversationContext(prev => ({\n        ...prev,\n        messageCount: messages.length\n      }));\n    }\n  }, [messages]);\n  useEffect(() => {\n    if (isOpen && chatContainerRef.current) {\n      const container = chatContainerRef.current;\n      const handleScroll = () => {\n        const dateMarkers = container.querySelectorAll('[data-date-marker]');\n        if (dateMarkers.length === 0) return;\n        let visibleMarker = null;\n        for (const marker of dateMarkers) {\n          const rect = marker.getBoundingClientRect();\n          const containerRect = container.getBoundingClientRect();\n          if (rect.top >= containerRect.top && rect.bottom <= containerRect.bottom) {\n            visibleMarker = marker.getAttribute('data-date-marker');\n            break;\n          }\n        }\n        setVisibleDateMarker(visibleMarker);\n      };\n      container.addEventListener('scroll', handleScroll);\n      return () => container.removeEventListener('scroll', handleScroll);\n    }\n  }, [isOpen]);\n  useEffect(() => {\n    if (messages.length > 1 && messages[messages.length - 1].sender === 'bot') {\n      audioRef.current.play().catch(() => {});\n    }\n  }, [messages]);\n\n  // Reset greeting flag for testing or if needed\n  useEffect(() => {\n    // Clear greeting flag if needed\n    // localStorage.removeItem('kspGreetingShown');\n  }, []);\n\n  // Force reset greeting state for development\n  useEffect(() => {\n    // Reset greeting flags to ensure it shows\n    localStorage.removeItem('kspGreetingShown');\n    localStorage.removeItem('kspChatOpenCount');\n\n    // Log for debugging\n    console.log('Greeting state reset, greeting should appear shortly');\n  }, []);\n\n  // Simplified greeting logic - always show at startup\n  useEffect(() => {\n    // Show greeting with slight delay after page loads\n    const timer = setTimeout(() => {\n      console.log('Showing greeting animation');\n      setShowGreeting(true);\n\n      // Hide after 8 seconds (increased from 5 for better visibility)\n      setTimeout(() => {\n        console.log('Hiding greeting animation');\n        setShowGreeting(false);\n        localStorage.setItem('kspGreetingShown', 'true');\n      }, 8000);\n    }, 1000);\n    return () => clearTimeout(timer);\n  }, []); // Empty dependency array means this runs once on mount\n\n  const toggleChat = useCallback(() => {\n    const newIsOpen = !isOpen;\n    setIsOpen(newIsOpen);\n\n    // Always show greeting when chat is opened\n    if (newIsOpen) {\n      console.log('Chat opened, showing greeting');\n      setShowGreeting(true);\n      setTimeout(() => {\n        setShowGreeting(false);\n      }, 5008);\n    }\n  }, [isOpen]);\n  const handleInputChange = useCallback(e => {\n    setNewMessage(e.target.value);\n    setIsUserTyping(true);\n    if (typingTimeout) clearTimeout(typingTimeout);\n    const timeout = setTimeout(() => {\n      setIsUserTyping(false);\n    }, 1000);\n    setTypingTimeout(timeout);\n  }, [typingTimeout]);\n\n  // Move these function definitions above their usage\n  const extractUserName = useCallback(message => {\n    const namePatterns = [/my name is (\\w+)/i, /i am (\\w+)/i, /i'm (\\w+)/i, /call me (\\w+)/i, /(\\w+) here/i];\n    for (const pattern of namePatterns) {\n      const match = message.match(pattern);\n      if (match && match[1]) {\n        return match[1].charAt(0).toUpperCase() + match[1].slice(1);\n      }\n    }\n    return null;\n  }, []);\n  const isNewVisitorGreeting = useCallback(message => {\n    const newVisitorPatterns = [/first time/i, /new here/i, /never (been|visited|ordered) before/i, /new customer/i];\n    return newVisitorPatterns.some(pattern => pattern.test(message));\n  }, []);\n  const updateConversationContext = useCallback(topic => {\n    setConversationContext(prev => {\n      const recentTopics = [topic, ...prev.recentTopics.slice(0, 2)];\n      return {\n        ...prev,\n        lastTopic: topic,\n        recentTopics: recentTopics.filter((v, i, a) => a.indexOf(v) === i)\n      };\n    });\n  }, []);\n\n  // Now findBotResponse can use these functions in its dependency array\n  const findBotResponse = useCallback(userMessage => {\n    const normalizedMessage = userMessage.toLowerCase();\n    const possibleName = extractUserName(userMessage);\n    if (possibleName) {\n      setConversationContext(prev => ({\n        ...prev,\n        userName: possibleName\n      }));\n    }\n\n    // Extract user intent and entities for better understanding\n    const userIntent = detectIntent(userMessage);\n    const entities = extractEntities(userMessage);\n    console.log('User intent:', userIntent, 'Entities:', entities);\n\n    // Pre-process the user message for NLP matching\n    // eslint-disable-next-line no-unused-vars\n    const processedUserMessage = preprocessText(userMessage).join(' ');\n\n    // Handle basic intents first\n    if (userIntent === 'greeting') {\n      updateConversationContext('greeting');\n      if (typeof knowledgeBase.greeting.response === 'function') {\n        const response = knowledgeBase.greeting.response(conversationContext);\n        setSuggestedQuestions(knowledgeBase.greeting.followUpQuestions || []);\n        return response;\n      }\n      setSuggestedQuestions(knowledgeBase.greeting.followUpQuestions || []);\n      return knowledgeBase.greeting.response;\n    }\n    if (userIntent === 'farewell') {\n      updateConversationContext('goodbye');\n      setSuggestedQuestions(knowledgeBase.goodbye.followUpQuestions || []);\n      return knowledgeBase.goodbye.response;\n    }\n    if (userIntent === 'gratitude') {\n      updateConversationContext('thanks');\n      setSuggestedQuestions(knowledgeBase.thanks.followUpQuestions || []);\n      return knowledgeBase.thanks.response;\n    }\n\n    // Calculate similarity scores with all topics in the knowledge base\n    const similarityScores = extendedKnowledgeBase.map(entry => ({\n      topic: entry.topic,\n      similarity: calculateSimilarity(userMessage, entry.originalText)\n    }));\n\n    // Sort by similarity (highest first)\n    similarityScores.sort((a, b) => b.similarity - a.similarity);\n    console.log('Top matches:', similarityScores.slice(0, 3));\n\n    // Use the best match if it's over the threshold\n    if (similarityScores[0].similarity > 0.15) {\n      const bestTopic = similarityScores[0].topic;\n      updateConversationContext(bestTopic);\n\n      // Find the matched topic in the knowledge base\n      const matchedEntry = knowledgeBase[bestTopic];\n      if (!matchedEntry) {\n        return t(\"I'm not sure I have information about that. Could you please ask something else?\", \"chatbot\");\n      }\n\n      // Generate a contextual response based on the matched entry\n      setSuggestedQuestions(matchedEntry.followUpQuestions || []);\n      if (typeof matchedEntry.response === 'function') {\n        return matchedEntry.response(conversationContext);\n      }\n\n      // Generate personalized response using the context\n      const contextualResponse = generateContextualResponse(userMessage, matchedEntry.response, conversationContext);\n      return contextualResponse || matchedEntry.response;\n    }\n\n    // Handle specific cases that might not match well with similarity\n\n    // Special handling for cancellation-related queries\n    if (/canc|cncl|cansl|ordr|orer|oredr/i.test(normalizedMessage)) {\n      updateConversationContext('cancellation');\n      setSuggestedQuestions(knowledgeBase.cancellation.followUpQuestions || []);\n      return knowledgeBase.cancellation.response;\n    }\n\n    // New visitor greeting\n    if (isNewVisitorGreeting(userMessage)) {\n      updateConversationContext('greeting');\n      return t(\"Welcome to KSP Yarns! We're a leading manufacturer of high-quality yarns with a focus on sustainability. How can I help you today?\", \"chatbot\");\n    }\n\n    // Default fallback response\n    return t(\"I'm not sure I understand. Could you please rephrase your question? I can help with information about our products, sustainability practices, ordering process, or company information.\", \"chatbot\");\n  }, [conversationContext, extractUserName, isNewVisitorGreeting, t, updateConversationContext]);\n\n  // Define handleSendMessage before it's used in handleKeyDown\n  const handleSendMessage = useCallback(() => {\n    if (!newMessage || newMessage.trim() === '') return;\n    const messageId = Date.now();\n    const userMessageText = newMessage.trim();\n    const newMessageObject = {\n      id: messageId,\n      text: userMessageText,\n      sender: 'user',\n      timestamp: new Date(),\n      feedback: null,\n      reaction: null\n    };\n    const isDuplicate = messages.some(msg => msg.sender === 'user' && msg.text === userMessageText && new Date().getTime() - new Date(msg.timestamp).getTime() < 2000);\n    if (!isDuplicate) {\n      setMessages(prevMessages => [...prevMessages, newMessageObject]);\n    }\n    setNewMessage('');\n    setIsTyping(true);\n\n    // Optimized response time - reduced minimum delay\n    setTimeout(() => {\n      let responseText;\n      try {\n        responseText = findBotResponse(userMessageText) || \"I'm sorry, I couldn't process that request.\";\n        const lastBotMessage = messages.filter(msg => msg.sender === 'bot').pop();\n        if (lastBotMessage && lastBotMessage.text === responseText) {\n          if (responseText.includes(\"Good\") && responseText.includes(\"Welcome to KSP Yarns\")) {\n            responseText = t(\"I see you're trying to ask something. Could you please be more specific? I can help with our products, ordering process, sustainability practices, and more.\", \"chatbot\");\n          } else {\n            responseText += \" \" + t(\"Was there something specific about this you'd like to know?\", \"chatbot\");\n          }\n        }\n      } catch (error) {\n        console.error(\"Error generating bot response:\", error);\n        responseText = \"Sorry, I encountered an error. Please try again.\";\n      }\n      const botResponse = {\n        id: messageId + 1,\n        text: responseText,\n        sender: 'bot',\n        timestamp: new Date(),\n        feedback: null,\n        reaction: null\n      };\n      setMessages(prevMessages => [...prevMessages, botResponse]);\n      setIsTyping(false);\n    }, 500 + Math.random() * 500); // Reduced response time for better responsiveness\n  }, [findBotResponse, newMessage, messages, t]); // Added 't' dependency\n\n  const handleKeyDown = useCallback(e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  }, [handleSendMessage]);\n  const getMessageGroups = useCallback(() => {\n    const groups = [];\n    let currentGroup = {\n      date: null,\n      messages: []\n    };\n    messages.forEach(message => {\n      try {\n        const messageTimestamp = message.timestamp instanceof Date ? message.timestamp : new Date(message.timestamp);\n        if (isNaN(messageTimestamp.getTime())) {\n          console.error('Invalid timestamp for message:', message);\n          return;\n        }\n        const messageDate = messageTimestamp.toLocaleDateString();\n        if (!currentGroup.date) {\n          currentGroup.date = messageDate;\n        } else if (currentGroup.date !== messageDate) {\n          groups.push({\n            ...currentGroup\n          });\n          currentGroup = {\n            date: messageDate,\n            messages: []\n          };\n        }\n        currentGroup.messages.push(message);\n      } catch (error) {\n        console.error('Error processing message:', error);\n      }\n    });\n    if (currentGroup.date && currentGroup.messages.length > 0) {\n      groups.push(currentGroup);\n    }\n    return groups;\n  }, [messages]);\n  const handleSuggestedQuestion = useCallback(question => {\n    if (!question) return;\n    const messageId = Date.now();\n    const isDuplicate = messages.some(msg => msg.sender === 'user' && msg.text === question && new Date().getTime() - new Date(msg.timestamp).getTime() < 2000);\n    if (isDuplicate) return;\n    const userMessage = {\n      id: messageId,\n      text: question,\n      sender: 'user',\n      timestamp: new Date(),\n      feedback: null,\n      reaction: null\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    setIsTyping(true);\n    setTimeout(() => {\n      let responseText;\n      try {\n        responseText = findBotResponse(question) || \"I'm sorry, I couldn't process that request.\";\n        const lastBotMessage = messages.filter(msg => msg.sender === 'bot').pop();\n        if (lastBotMessage && lastBotMessage.text === responseText) {\n          responseText = `${responseText.split('.')[0]}. ${t(\"Let me provide more details on this topic.\", \"chatbot\")} ${responseText.split('.').slice(1).join('.')}`;\n        }\n      } catch (error) {\n        console.error(\"Error generating bot response:\", error);\n        responseText = \"Sorry, I encountered an error. Please try again.\";\n      }\n      const botResponse = {\n        id: messageId + 1,\n        text: responseText,\n        sender: 'bot',\n        timestamp: new Date(),\n        feedback: null,\n        reaction: null\n      };\n      setMessages(prevMessages => [...prevMessages, botResponse]);\n      setIsTyping(false);\n    }, 1000 + Math.random() * 1000);\n  }, [findBotResponse, messages, t]);\n  const formatTimestamp = useCallback(timestamp => {\n    try {\n      const date = timestamp instanceof Date ? timestamp : new Date(timestamp);\n      if (isNaN(date.getTime())) {\n        console.error(\"Invalid timestamp:\", timestamp);\n        return \"\";\n      }\n      return new Intl.DateTimeFormat('default', {\n        hour: 'numeric',\n        minute: 'numeric'\n      }).format(date);\n    } catch (error) {\n      console.error(\"Error formatting timestamp:\", error);\n      return \"\";\n    }\n  }, []);\n  const formatDateMarker = useCallback(date => {\n    const today = new Date().toLocaleDateString();\n    const yesterday = new Date(Date.now() - 86400000).toLocaleDateString();\n    if (date === today) return t(\"Today\", \"chatbot\");\n    if (date === yesterday) return t(\"Yesterday\", \"chatbot\");\n    return date;\n  }, [t]);\n  const startListening = useCallback(() => {\n    if ('SpeechRecognition' in window || 'webkitSpeechRecognition' in window) {\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n      const recognition = new SpeechRecognition();\n      recognition.lang = 'en-US';\n      recognition.continuous = false;\n      recognition.interimResults = false;\n      recognition.onstart = () => {\n        setIsListening(true);\n      };\n      recognition.onresult = event => {\n        const transcript = event.results[0][0].transcript;\n        setNewMessage(transcript);\n        setIsListening(false);\n      };\n      recognition.onerror = () => {\n        setIsListening(false);\n      };\n      recognition.onend = () => {\n        setIsListening(false);\n      };\n      recognition.start();\n    } else {\n      alert(t(\"Speech recognition is not supported in your browser.\", \"chatbot\"));\n    }\n  }, [t]);\n  const handleMessageFeedback = useCallback((messageId, feedbackType) => {\n    setMessages(prevMessages => prevMessages.map(message => message.id === messageId ? {\n      ...message,\n      feedback: feedbackType\n    } : message));\n  }, []);\n  const handleReactionClick = useCallback(messageId => {\n    setShowEmojiPicker(showEmojiPicker === messageId ? null : messageId);\n  }, [showEmojiPicker]);\n  const addReaction = useCallback((messageId, reactionType) => {\n    setMessages(prevMessages => prevMessages.map(message => message.id === messageId ? {\n      ...message,\n      reaction: reactionType\n    } : message));\n    setShowEmojiPicker(null);\n  }, []);\n  const exportChatHistory = useCallback(() => {\n    const chatHistory = messages.map(msg => {\n      const sender = msg.sender === 'bot' ? 'KSP Assistant' : 'You';\n      const time = new Date(msg.timestamp).toLocaleString();\n      return `${time} - ${sender}: ${msg.text}`;\n    }).join('\\n\\n');\n    const blob = new Blob([chatHistory], {\n      type: 'text/plain'\n    });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `ksp-chat-${new Date().toISOString().slice(0, 10)}.txt`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  }, [messages]); // Removed 't' dependency\n\n  const clearChatHistory = useCallback(() => {\n    if (window.confirm(t(\"Are you sure you want to clear the chat history?\", \"chatbot\"))) {\n      const newId = Date.now();\n      setMessages([{\n        id: newId,\n        text: t(\"Hello! I'm KSP's AI assistant. How can I help you today?\", \"chatbot\"),\n        sender: 'bot',\n        timestamp: new Date(),\n        feedback: null,\n        reaction: null\n      }]);\n      setConversationContext(prev => ({\n        ...prev,\n        lastTopic: null,\n        recentTopics: [],\n        messageCount: 0\n      }));\n      localStorage.removeItem('kspChatHistory');\n    }\n  }, [t]); // Added 't' dependency\n\n  const copyToClipboard = useCallback(text => {\n    if (!text) return;\n    navigator.clipboard.writeText(text).then(() => {\n      setIsCopying(true);\n      setTimeout(() => setIsCopying(false), 2000);\n    });\n  }, []);\n  const speakMessage = useCallback(text => {\n    if (!text) return;\n    if ('speechSynthesis' in window) {\n      const utterance = new SpeechSynthesisUtterance(text);\n      window.speechSynthesis.speak(utterance);\n    } else {\n      alert(t(\"Text-to-speech is not supported in your browser.\", \"chatbot\"));\n    }\n  }, [t]);\n  const reactions = useMemo(() => ['👍', '👎', '❤️', '😊', '😮'], []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(motion.button, {\n      className: \"fixed bottom-6 right-6 z-50 bg-gradient-to-r from-blue-600 to-blue-800 \\r text-white p-4 rounded-full shadow-lg hover:shadow-xl\",\n      whileHover: {\n        scale: 1.1\n      },\n      whileTap: {\n        scale: 0.9\n      },\n      onClick: toggleChat,\n      \"aria-label\": isOpen ? t(\"Close chat\", \"chatbot\") : t(\"Open chat\", \"chatbot\"),\n      children: isOpen ? /*#__PURE__*/_jsxDEV(FaTimes, {\n        className: \"text-xl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(FaComments, {\n        className: \"text-xl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 679,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: showGreeting && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: 100,\n          scale: 0\n        },\n        animate: {\n          opacity: 1,\n          y: 0,\n          scale: 1\n        },\n        exit: {\n          opacity: 0,\n          y: 50,\n          scale: 0.5\n        },\n        transition: {\n          type: \"spring\",\n          damping: 8,\n          stiffness: 100,\n          duration: 0.8\n        },\n        className: \"fixed bottom-24 right-12 z-50 max-w-xs\",\n        style: {\n          pointerEvents: 'none'\n        } // Make sure it doesn't block interaction\n        ,\n        children: [/*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"absolute bottom-0 left-8 w-2 bg-gradient-to-b from-blue-600 to-blue-400 rounded-full\",\n          initial: {\n            height: 0\n          },\n          animate: {\n            height: 60\n          },\n          transition: {\n            delay: 0.3,\n            duration: 0.4\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 700,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"relative\",\n          children: [/*#__PURE__*/_jsxDEV(motion.div, {\n            className: \"bg-gradient-to-r from-blue-700 to-blue-500 text-white p-6 rounded-xl rounded-bl-none shadow-xl\",\n            initial: {\n              y: 20,\n              opacity: 0\n            },\n            animate: {\n              y: 0,\n              opacity: 1\n            },\n            transition: {\n              delay: 0.6\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center space-x-2 mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(motion.div, {\n                animate: {\n                  rotate: [0, 15, -15, 0]\n                },\n                transition: {\n                  duration: 1,\n                  repeat: 3,\n                  repeatDelay: 0.5\n                },\n                children: /*#__PURE__*/_jsxDEV(FaRobot, {\n                  className: \"text-2xl\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 720,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 716,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-bold text-xl\",\n                children: \"KSP Assistant\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 722,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(motion.p, {\n              className: \"text-md font-medium\",\n              initial: {\n                opacity: 0\n              },\n              animate: {\n                opacity: 1\n              },\n              transition: {\n                delay: 0.8\n              },\n              children: t(\"Hi there! 👋 I'm your KSP Assistant! How can I help you today?\", \"chatbot\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 724,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n              className: \"absolute right-2 bottom-[-30px]\",\n              initial: {\n                x: 0\n              },\n              animate: {\n                x: [0, 15, 0],\n                opacity: [0.5, 1, 0.5]\n              },\n              transition: {\n                repeat: Infinity,\n                duration: 1.5\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-blue-600 text-3xl font-bold\",\n                children: \"\\u2193\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 740,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 734,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              scale: 0\n            },\n            animate: {\n              scale: 1,\n              y: [0, -12, 0]\n            },\n            transition: {\n              scale: {\n                delay: 0.2,\n                duration: 0.5\n              },\n              y: {\n                repeat: Infinity,\n                duration: 1.5,\n                repeatType: \"reverse\"\n              }\n            },\n            className: \"absolute -left-10 -bottom-10 bg-gradient-to-r from-blue-700 to-blue-500 p-5 rounded-full text-white text-2xl shadow-lg border-4 border-white\",\n            children: /*#__PURE__*/_jsxDEV(motion.div, {\n              animate: {\n                rotateZ: [0, 15, -15, 0]\n              },\n              transition: {\n                repeat: Infinity,\n                duration: 2,\n                repeatType: \"reverse\"\n              },\n              children: /*#__PURE__*/_jsxDEV(FaRobot, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 760,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 756,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 684,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed top-4 right-4 z-50\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          localStorage.removeItem('kspGreetingShown');\n          localStorage.removeItem('kspChatOpenCount');\n          console.log('Manually showing greeting');\n          setShowGreeting(true);\n          setTimeout(() => setShowGreeting(false), 8000);\n        },\n        className: \"bg-blue-500 text-white text-xs p-2 rounded shadow-md hover:bg-blue-600\",\n        children: \"Show Greeting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 770,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 769,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n      children: isOpen && /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0,\n          y: 20,\n          scale: 0.9\n        },\n        animate: {\n          opacity: 1,\n          y: 0,\n          scale: 1\n        },\n        exit: {\n          opacity: 0,\n          y: 20,\n          scale: 0.9\n        },\n        transition: {\n          type: \"spring\",\n          damping: 25,\n          stiffness: 300\n        },\n        className: \"fixed bottom-24 right-6 z-50 w-80 sm:w-96 h-[500px] max-h-[80vh]\\r bg-white text-gray-800 rounded-2xl shadow-2xl overflow-hidden border border-gray-200\\r flex flex-col\",\n        role: \"dialog\",\n        \"aria-labelledby\": \"chat-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gradient-to-r from-blue-600 to-blue-800 text-white p-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-white/20 p-2 rounded-full mr-3\",\n              children: /*#__PURE__*/_jsxDEV(FaRobot, {\n                className: \"text-xl\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 800,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 799,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"font-bold\",\n                id: \"chat-title\",\n                children: t(\"KSP Assistant\", \"chatbot\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 803,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"text-xs text-blue-100\",\n                children: t(\"Online | AI Powered\", \"chatbot\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 804,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 802,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-auto flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: exportChatHistory,\n                className: \"bg-white/20 hover:bg-white/30 rounded-full p-2 transition-colors mr-2\",\n                \"aria-label\": t(\"Export chat history\", \"chatbot\"),\n                title: t(\"Export chat history\", \"chatbot\"),\n                children: /*#__PURE__*/_jsxDEV(FaVolumeUp, {\n                  className: \"text-sm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 813,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 807,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: clearChatHistory,\n                className: \"bg-white/20 hover:bg-white/30 rounded-full p-2 transition-colors mr-2\",\n                \"aria-label\": t(\"Clear chat\", \"chatbot\"),\n                title: t(\"Clear chat\", \"chatbot\"),\n                children: /*#__PURE__*/_jsxDEV(FaTimes, {\n                  className: \"text-sm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 821,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 815,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: toggleChat,\n                className: \"bg-white/20 hover:bg-white/30 rounded-full p-2 transition-colors\",\n                \"aria-label\": t(\"Close chat\", \"chatbot\"),\n                children: /*#__PURE__*/_jsxDEV(FaTimes, {\n                  className: \"text-sm\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 828,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 823,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 806,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 797,\n          columnNumber: 13\n        }, this), visibleDateMarker && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"absolute top-16 left-1/2 transform -translate-x-1/2 z-10\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-blue-600 text-white px-4 py-1 rounded-full text-xs shadow-md\",\n            children: formatDateMarker(visibleDateMarker)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 836,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: chatContainerRef,\n          className: \"flex-1 overflow-y-auto p-4 bg-gray-50\",\n          role: \"log\",\n          \"aria-live\": \"polite\",\n          children: [getMessageGroups().map((group, groupIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex justify-center my-3\",\n              \"data-date-marker\": group.date,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-gray-200 text-gray-600 px-3 py-1 rounded-full text-xs\",\n                children: formatDateMarker(group.date)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 854,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 850,\n              columnNumber: 19\n            }, this), group.messages.map(message => /*#__PURE__*/_jsxDEV(motion.div, {\n              initial: {\n                opacity: 0,\n                y: 10\n              },\n              animate: {\n                opacity: 1,\n                y: 0\n              },\n              transition: {\n                duration: 0.3\n              },\n              className: `mb-4 flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`,\n              role: \"article\",\n              \"aria-label\": `${message.sender === 'user' ? 'Your message' : 'Assistant message'}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `max-w-[80%] rounded-2xl px-4 py-2 ${message.sender === 'user' ? 'bg-blue-600 text-white rounded-tr-none' : 'bg-white text-gray-800 rounded-tl-none shadow-md border border-gray-100'} relative group`,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"text-sm whitespace-pre-wrap\",\n                  children: message.text ? message.text.split(/\\b((?:https?:\\/\\/|www\\.)[^\\s]+\\.[^\\s]+)\\b/).map((part, i) => {\n                    if (part && part.match && part.match(/^(https?:\\/\\/|www\\.)/)) {\n                      return /*#__PURE__*/_jsxDEV(\"a\", {\n                        href: part.startsWith('www.') ? `https://${part}` : part,\n                        target: \"_blank\",\n                        rel: \"noopener noreferrer\",\n                        className: \"text-blue-300 hover:underline\",\n                        children: part\n                      }, i, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 881,\n                        columnNumber: 35\n                      }, this);\n                    } else {\n                      return part || '';\n                    }\n                  }) : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 876,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between items-center mt-1\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `text-xs ${message.sender === 'user' ? 'text-blue-100' : 'text-gray-500'}`,\n                    children: formatTimestamp(message.timestamp)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 899,\n                    columnNumber: 27\n                  }, this), message.reaction && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"ml-2 text-xs\",\n                    children: message.reaction\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 908,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 898,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `absolute ${message.sender === 'user' ? 'left-0 -translate-x-full' : 'right-0 translate-x-full'} \n                                       top-1/2 -translate-y-1/2 bg-white rounded-lg shadow-md border border-gray-100 p-1\n                                       flex items-center opacity-0 group-hover:opacity-100 transition-opacity`,\n                  children: [message.sender === 'bot' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleMessageFeedback(message.id, 'helpful'),\n                      className: `p-1 rounded-full ${message.feedback === 'helpful' ? 'text-green-600 bg-green-50' : 'text-gray-400 hover:text-green-600'}`,\n                      \"aria-label\": t(\"Mark as helpful\", \"chatbot\"),\n                      title: t(\"Helpful\", \"chatbot\"),\n                      children: /*#__PURE__*/_jsxDEV(FaThumbsUp, {\n                        size: 12\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 926,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 920,\n                      columnNumber: 31\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      onClick: () => handleMessageFeedback(message.id, 'unhelpful'),\n                      className: `p-1 rounded-full ${message.feedback === 'unhelpful' ? 'text-red-600 bg-red-50' : 'text-gray-400 hover:text-red-600'}`,\n                      \"aria-label\": t(\"Mark as unhelpful\", \"chatbot\"),\n                      title: t(\"Not helpful\", \"chatbot\"),\n                      children: /*#__PURE__*/_jsxDEV(FaThumbsDown, {\n                        size: 12\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 934,\n                        columnNumber: 33\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 928,\n                      columnNumber: 31\n                    }, this)]\n                  }, void 0, true), message.sender === 'bot' && /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => copyToClipboard(message.text),\n                    className: \"p-1 rounded-full text-gray-400 hover:text-blue-600\",\n                    \"aria-label\": t(\"Copy message\", \"chatbot\"),\n                    title: isCopying ? t(\"Copied!\", \"chatbot\") : t(\"Copy to clipboard\", \"chatbot\"),\n                    children: /*#__PURE__*/_jsxDEV(FaRegCopy, {\n                      size: 12\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 946,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 940,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => speakMessage(message.text),\n                    className: \"p-1 rounded-full text-gray-400 hover:text-blue-600\",\n                    \"aria-label\": t(\"Speak message\", \"chatbot\"),\n                    title: t(\"Read aloud\", \"chatbot\"),\n                    children: /*#__PURE__*/_jsxDEV(FaVolumeUp, {\n                      size: 12\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 956,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 950,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    onClick: () => handleReactionClick(message.id),\n                    className: \"p-1 rounded-full text-gray-400 hover:text-blue-600\",\n                    \"aria-label\": t(\"Add reaction\", \"chatbot\"),\n                    title: t(\"Add reaction\", \"chatbot\"),\n                    children: /*#__PURE__*/_jsxDEV(FaRegSmile, {\n                      size: 12\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 965,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 959,\n                    columnNumber: 27\n                  }, this), showEmojiPicker === message.id && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"absolute top-full mt-1 bg-white shadow-lg rounded-lg border border-gray-200 p-1 z-10\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex\",\n                      children: reactions.map((emoji, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n                        onClick: () => addReaction(message.id, emoji),\n                        className: \"p-1 hover:bg-gray-100 rounded\",\n                        children: emoji\n                      }, i, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 972,\n                        columnNumber: 35\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 970,\n                      columnNumber: 31\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 969,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 914,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 869,\n                columnNumber: 23\n              }, this)\n            }, message.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 860,\n              columnNumber: 21\n            }, this))]\n          }, groupIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 849,\n            columnNumber: 17\n          }, this)), isTyping && /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              opacity: 0,\n              y: 10\n            },\n            animate: {\n              opacity: 1,\n              y: 0\n            },\n            className: \"flex justify-start mb-4\",\n            \"aria-live\": \"polite\",\n            \"aria-label\": t(\"Bot is typing\", \"chatbot\"),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-white text-gray-600 shadow-md border border-gray-100 rounded-2xl rounded-tl-none px-4 py-2\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex space-x-2\",\n                children: [/*#__PURE__*/_jsxDEV(motion.div, {\n                  animate: {\n                    y: [0, -5, 0]\n                  },\n                  transition: {\n                    repeat: Infinity,\n                    duration: 0.6,\n                    repeatDelay: 0.2\n                  },\n                  className: \"w-2 h-2 bg-blue-600 rounded-full\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1000,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n                  animate: {\n                    y: [0, -5, 0]\n                  },\n                  transition: {\n                    repeat: Infinity,\n                    duration: 0.6,\n                    delay: 0.2,\n                    repeatDelay: 0.2\n                  },\n                  className: \"w-2 h-2 bg-blue-600 rounded-full\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1005,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n                  animate: {\n                    y: [0, -5, 0]\n                  },\n                  transition: {\n                    repeat: Infinity,\n                    duration: 0.6,\n                    delay: 0.4,\n                    repeatDelay: 0.2\n                  },\n                  className: \"w-2 h-2 bg-blue-600 rounded-full\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1010,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 999,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 998,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 991,\n            columnNumber: 17\n          }, this), isUserTyping && /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              opacity: 0,\n              y: 10\n            },\n            animate: {\n              opacity: 1,\n              y: 0\n            },\n            className: \"flex justify-end mb-4\",\n            \"aria-live\": \"polite\",\n            \"aria-label\": t(\"You are typing\", \"chatbot\"),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-blue-100 text-blue-600 rounded-2xl rounded-tr-none px-3 py-1 text-xs\",\n              children: t(\"typing...\", \"chatbot\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1028,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1021,\n            columnNumber: 17\n          }, this), !isTyping && messages.length > 0 && messages[messages.length - 1].sender === 'bot' && /*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              opacity: 0,\n              y: 10\n            },\n            animate: {\n              opacity: 1,\n              y: 0\n            },\n            className: \"mb-4 mt-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center mb-2\",\n              children: [/*#__PURE__*/_jsxDEV(FaLightbulb, {\n                className: \"text-yellow-500 mr-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1041,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-xs text-gray-500\",\n                children: t(\"Suggested questions:\", \"chatbot\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1042,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1040,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-wrap gap-2\",\n              children: suggestedQuestions.map((question, index) => /*#__PURE__*/_jsxDEV(motion.button, {\n                whileHover: {\n                  scale: 1.03\n                },\n                whileTap: {\n                  scale: 0.98\n                },\n                onClick: () => handleSuggestedQuestion(question),\n                className: \"bg-blue-50 text-blue-700 border border-blue-100 text-xs py-1 px-3 rounded-full hover:bg-blue-100\",\n                children: question\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1048,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1046,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1035,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: messagesEndRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1062,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 842,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-3 border-t bg-white border-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              ref: inputRef,\n              value: newMessage,\n              onChange: handleInputChange,\n              onKeyDown: handleKeyDown,\n              placeholder: t(\"Type your message...\", \"chatbot\"),\n              className: \"w-full p-3 pr-20 bg-gray-100 text-gray-800 placeholder-gray-500 border-gray-200 \\r border rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 resize-none\",\n              style: {\n                minHeight: '48px',\n                maxHeight: '120px',\n                height: Math.min(120, Math.max(48, newMessage && newMessage.split ? newMessage.split('\\n').length * 24 : 48)) + 'px'\n              },\n              \"aria-label\": t(\"Message input\", \"chatbot\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1067,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"absolute right-2 bottom-2 flex items-center space-x-1\",\n              children: [/*#__PURE__*/_jsxDEV(motion.button, {\n                whileHover: {\n                  scale: 1.1\n                },\n                whileTap: {\n                  scale: 0.9\n                },\n                onClick: startListening,\n                className: `p-2 rounded-full ${isListening ? 'bg-red-500 text-white' : 'bg-gray-200 text-gray-600 hover:bg-gray-300'}`,\n                disabled: isTyping,\n                \"aria-label\": isListening ? t(\"Stop listening\", \"chatbot\") : t(\"Start voice input\", \"chatbot\"),\n                title: isListening ? t(\"Stop listening\", \"chatbot\") : t(\"Voice input\", \"chatbot\"),\n                children: /*#__PURE__*/_jsxDEV(FaMicrophone, {\n                  className: isListening ? 'animate-pulse' : ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1097,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1084,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(motion.button, {\n                whileHover: {\n                  scale: 1.1\n                },\n                whileTap: {\n                  scale: 0.9\n                },\n                onClick: handleSendMessage,\n                className: `p-2 rounded-full ${newMessage.trim() === '' ? 'bg-blue-300 text-white cursor-not-allowed' : 'bg-blue-600 text-white hover:bg-blue-700'}`,\n                disabled: newMessage.trim() === '' || isTyping,\n                \"aria-label\": t(\"Send message\", \"chatbot\"),\n                title: t(\"Send message\", \"chatbot\"),\n                children: isTyping ? /*#__PURE__*/_jsxDEV(FaSpinner, {\n                  className: \"animate-spin\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1114,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(FaPaperPlane, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1116,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1100,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1083,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1066,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center mt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              className: \"text-xs text-gray-400\",\n              children: t(\"KSP's AI assistant helps with product inquiries and support\", \"chatbot\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1123,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1122,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1065,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 786,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 784,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ChatBot, \"236VtZhJr+DcwF195KLMrQX3hss=\", false, function () {\n  return [useTranslation];\n});\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCallback","useMemo","motion","AnimatePresence","FaRobot","FaComments","FaTimes","FaPaperPlane","FaSpinner","FaLightbulb","FaMicrophone","FaThumbsUp","FaThumbsDown","FaRegSmile","FaRegCopy","FaVolumeUp","useTranslation","knowledgeBase","extendedKnowledgeBase","preprocessText","calculateSimilarity","detectIntent","extractEntities","generateContextualResponse","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatBot","_s","t","isOpen","setIsOpen","showGreeting","setShowGreeting","messages","setMessages","savedMessages","localStorage","getItem","parsedMessages","JSON","parse","uniqueMessages","Array","from","Map","map","msg","id","values","timestamp","Date","isNaN","getTime","Error","err","console","warn","error","text","sender","feedback","reaction","newMessage","setNewMessage","isTyping","setIsTyping","isUserTyping","setIsUserTyping","typingTimeout","setTypingTimeout","isListening","setIsListening","conversationContext","setConversationContext","savedContext","lastTopic","userName","recentTopics","messageCount","suggestedQuestions","setSuggestedQuestions","showEmojiPicker","setShowEmojiPicker","visibleDateMarker","setVisibleDateMarker","isCopying","setIsCopying","messagesEndRef","inputRef","chatContainerRef","audioRef","Audio","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","length","setItem","stringify","focus","prev","container","handleScroll","dateMarkers","querySelectorAll","visibleMarker","marker","rect","getBoundingClientRect","containerRect","top","bottom","getAttribute","addEventListener","removeEventListener","play","catch","removeItem","log","timer","setTimeout","clearTimeout","toggleChat","newIsOpen","handleInputChange","e","target","value","timeout","extractUserName","message","namePatterns","pattern","match","charAt","toUpperCase","slice","isNewVisitorGreeting","newVisitorPatterns","some","test","updateConversationContext","topic","filter","v","i","a","indexOf","findBotResponse","userMessage","normalizedMessage","toLowerCase","possibleName","userIntent","entities","processedUserMessage","join","greeting","response","followUpQuestions","goodbye","thanks","similarityScores","entry","similarity","originalText","sort","b","bestTopic","matchedEntry","contextualResponse","cancellation","handleSendMessage","trim","messageId","now","userMessageText","newMessageObject","isDuplicate","prevMessages","responseText","lastBotMessage","pop","includes","botResponse","Math","random","handleKeyDown","key","shiftKey","preventDefault","getMessageGroups","groups","currentGroup","date","forEach","messageTimestamp","messageDate","toLocaleDateString","push","handleSuggestedQuestion","question","split","formatTimestamp","Intl","DateTimeFormat","hour","minute","format","formatDateMarker","today","yesterday","startListening","window","SpeechRecognition","webkitSpeechRecognition","recognition","lang","continuous","interimResults","onstart","onresult","event","transcript","results","onerror","onend","start","alert","handleMessageFeedback","feedbackType","handleReactionClick","addReaction","reactionType","exportChatHistory","chatHistory","time","toLocaleString","blob","Blob","type","url","URL","createObjectURL","document","createElement","href","download","toISOString","body","appendChild","click","removeChild","revokeObjectURL","clearChatHistory","confirm","newId","copyToClipboard","navigator","clipboard","writeText","then","speakMessage","utterance","SpeechSynthesisUtterance","speechSynthesis","speak","reactions","children","button","className","whileHover","scale","whileTap","onClick","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","opacity","y","animate","exit","transition","damping","stiffness","duration","style","pointerEvents","height","delay","rotate","repeat","repeatDelay","p","x","Infinity","repeatType","rotateZ","role","title","ref","group","groupIndex","part","startsWith","rel","size","emoji","index","onChange","onKeyDown","placeholder","minHeight","maxHeight","min","max","disabled","_c","$RefreshReg$"],"sources":["d:/ksp_devops/ksp_user_devops/frontend/src/components/ChatBot.js"],"sourcesContent":["import React, { useState, useRef, useEffect, useCallback, useMemo } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { FaRobot, FaComments, FaTimes, FaPaperPlane, FaSpinner, FaLightbulb, FaMicrophone, \r\n         FaThumbsUp, FaThumbsDown, FaRegSmile, FaRegCopy, FaVolumeUp } from 'react-icons/fa';\r\nimport { useTranslation } from '../utils/TranslationContext';\r\nimport { knowledgeBase, extendedKnowledgeBase } from '../data/chatbotKnowledgeBase';\r\nimport { preprocessText, calculateSimilarity, detectIntent, extractEntities, generateContextualResponse } from '../utils/nlpUtils';\r\n\r\nconst ChatBot = () => {\r\n  const { t } = useTranslation();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  // Start with greeting visible by default\r\n  const [showGreeting, setShowGreeting] = useState(true);\r\n  const [messages, setMessages] = useState(() => {\r\n    const savedMessages = localStorage.getItem('kspChatHistory');\r\n    if (savedMessages) {\r\n      try {\r\n        const parsedMessages = JSON.parse(savedMessages);\r\n        const uniqueMessages = Array.from(\r\n          new Map(parsedMessages.map(msg => [msg.id, msg])).values()\r\n        );\r\n        \r\n        return uniqueMessages.map(msg => {\r\n          try {\r\n            const timestamp = msg.timestamp ? new Date(msg.timestamp) : new Date();\r\n            if (isNaN(timestamp.getTime())) {\r\n              throw new Error('Invalid timestamp');\r\n            }\r\n            return { ...msg, timestamp };\r\n          } catch (err) {\r\n            console.warn('Invalid timestamp for message, using current time instead');\r\n            return { ...msg, timestamp: new Date() };\r\n          }\r\n        });\r\n      } catch (error) {\r\n        console.error('Error parsing chat history:', error);\r\n        return [{ \r\n          id: 1, \r\n          text: t(\"Hello! I'm KSP's AI assistant. How can I help you today?\", \"chatbot\"), \r\n          sender: 'bot', \r\n          timestamp: new Date(),\r\n          feedback: null,\r\n          reaction: null\r\n        }];\r\n      }\r\n    }\r\n    return [{ \r\n      id: 1, \r\n      text: t(\"Hello! I'm KSP's AI assistant. How can I help you today?\", \"chatbot\"), \r\n      sender: 'bot', \r\n      timestamp: new Date(),\r\n      feedback: null,\r\n      reaction: null\r\n    }];\r\n  });\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const [isUserTyping, setIsUserTyping] = useState(false);\r\n  const [typingTimeout, setTypingTimeout] = useState(null);\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [conversationContext, setConversationContext] = useState(() => {\r\n    const savedContext = localStorage.getItem('kspChatContext');\r\n    return savedContext ? JSON.parse(savedContext) : {\r\n      lastTopic: null,\r\n      userName: null,\r\n      recentTopics: [],\r\n      messageCount: 0\r\n    };\r\n  });\r\n  const [suggestedQuestions, setSuggestedQuestions] = useState([\r\n    t(\"What products do you offer?\", \"chatbot\"),\r\n    t(\"How do I place an order?\", \"chatbot\"),\r\n    t(\"Tell me about your sustainability practices\", \"chatbot\"),\r\n  ]);\r\n  const [showEmojiPicker, setShowEmojiPicker] = useState(null);\r\n  const [visibleDateMarker, setVisibleDateMarker] = useState(null);\r\n  const [isCopying, setIsCopying] = useState(false);\r\n  \r\n  const messagesEndRef = useRef(null);\r\n  const inputRef = useRef(null);\r\n  const chatContainerRef = useRef(null);\r\n  const audioRef = useRef(new Audio('/sounds/message-received.mp3'));\r\n\r\n  // Define scrollToBottom before using it in useEffect\r\n  const scrollToBottom = useCallback(() => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (messages.length > 0) {\r\n      const uniqueMessages = Array.from(\r\n        new Map(messages.map(msg => [msg.id, msg])).values()\r\n      );\r\n      localStorage.setItem('kspChatHistory', JSON.stringify(uniqueMessages));\r\n    }\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('kspChatContext', JSON.stringify(conversationContext));\r\n  }, [conversationContext]);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages, scrollToBottom]);\r\n\r\n  useEffect(() => {\r\n    if (isOpen && inputRef.current) {\r\n      inputRef.current.focus();\r\n    }\r\n  }, [isOpen]);\r\n\r\n  useEffect(() => {\r\n    if (messages.length > 1) {\r\n      setConversationContext(prev => ({\r\n        ...prev,\r\n        messageCount: messages.length\r\n      }));\r\n    }\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    if (isOpen && chatContainerRef.current) {\r\n      const container = chatContainerRef.current;\r\n      \r\n      const handleScroll = () => {\r\n        const dateMarkers = container.querySelectorAll('[data-date-marker]');\r\n        \r\n        if (dateMarkers.length === 0) return;\r\n        \r\n        let visibleMarker = null;\r\n        \r\n        for (const marker of dateMarkers) {\r\n          const rect = marker.getBoundingClientRect();\r\n          const containerRect = container.getBoundingClientRect();\r\n          \r\n          if (rect.top >= containerRect.top && rect.bottom <= containerRect.bottom) {\r\n            visibleMarker = marker.getAttribute('data-date-marker');\r\n            break;\r\n          }\r\n        }\r\n        \r\n        setVisibleDateMarker(visibleMarker);\r\n      };\r\n      \r\n      container.addEventListener('scroll', handleScroll);\r\n      return () => container.removeEventListener('scroll', handleScroll);\r\n    }\r\n  }, [isOpen]);\r\n\r\n  useEffect(() => {\r\n    if (messages.length > 1 && messages[messages.length - 1].sender === 'bot') {\r\n      audioRef.current.play().catch(() => {});\r\n    }\r\n  }, [messages]);\r\n\r\n  // Reset greeting flag for testing or if needed\r\n  useEffect(() => {\r\n    // Clear greeting flag if needed\r\n    // localStorage.removeItem('kspGreetingShown');\r\n  }, []);\r\n\r\n  // Force reset greeting state for development\r\n  useEffect(() => {\r\n    // Reset greeting flags to ensure it shows\r\n    localStorage.removeItem('kspGreetingShown');\r\n    localStorage.removeItem('kspChatOpenCount');\r\n    \r\n    // Log for debugging\r\n    console.log('Greeting state reset, greeting should appear shortly');\r\n  }, []);\r\n\r\n  // Simplified greeting logic - always show at startup\r\n  useEffect(() => {\r\n    // Show greeting with slight delay after page loads\r\n    const timer = setTimeout(() => {\r\n      console.log('Showing greeting animation');\r\n      setShowGreeting(true);\r\n      \r\n      // Hide after 8 seconds (increased from 5 for better visibility)\r\n      setTimeout(() => {\r\n        console.log('Hiding greeting animation');\r\n        setShowGreeting(false);\r\n        localStorage.setItem('kspGreetingShown', 'true');\r\n      }, 8000);\r\n    }, 1000);\r\n    \r\n    return () => clearTimeout(timer);\r\n  }, []); // Empty dependency array means this runs once on mount\r\n\r\n  const toggleChat = useCallback(() => {\r\n    const newIsOpen = !isOpen;\r\n    setIsOpen(newIsOpen);\r\n    \r\n    // Always show greeting when chat is opened\r\n    if (newIsOpen) {\r\n      console.log('Chat opened, showing greeting');\r\n      setShowGreeting(true);\r\n      setTimeout(() => {\r\n        setShowGreeting(false);\r\n      }, 5008);\r\n    }\r\n  }, [isOpen]);\r\n\r\n  const handleInputChange = useCallback((e) => {\r\n    setNewMessage(e.target.value);\r\n    setIsUserTyping(true);\r\n    if (typingTimeout) clearTimeout(typingTimeout);\r\n    const timeout = setTimeout(() => {\r\n      setIsUserTyping(false);\r\n    }, 1000);\r\n    setTypingTimeout(timeout);\r\n  }, [typingTimeout]);\r\n\r\n  // Move these function definitions above their usage\r\n  const extractUserName = useCallback((message) => {\r\n    const namePatterns = [\r\n      /my name is (\\w+)/i,\r\n      /i am (\\w+)/i,\r\n      /i'm (\\w+)/i,\r\n      /call me (\\w+)/i,\r\n      /(\\w+) here/i\r\n    ];\r\n    \r\n    for (const pattern of namePatterns) {\r\n      const match = message.match(pattern);\r\n      if (match && match[1]) {\r\n        return match[1].charAt(0).toUpperCase() + match[1].slice(1);\r\n      }\r\n    }\r\n    return null;\r\n  }, []);\r\n\r\n  const isNewVisitorGreeting = useCallback((message) => {\r\n    const newVisitorPatterns = [\r\n      /first time/i,\r\n      /new here/i,\r\n      /never (been|visited|ordered) before/i,\r\n      /new customer/i\r\n    ];\r\n    \r\n    return newVisitorPatterns.some(pattern => pattern.test(message));\r\n  }, []);\r\n\r\n  const updateConversationContext = useCallback((topic) => {\r\n    setConversationContext(prev => {\r\n      const recentTopics = [topic, ...prev.recentTopics.slice(0, 2)];\r\n      return {\r\n        ...prev,\r\n        lastTopic: topic,\r\n        recentTopics: recentTopics.filter((v, i, a) => a.indexOf(v) === i)\r\n      };\r\n    });\r\n  }, []);\r\n\r\n  // Now findBotResponse can use these functions in its dependency array\r\n  const findBotResponse = useCallback((userMessage) => {\r\n    const normalizedMessage = userMessage.toLowerCase();\r\n    const possibleName = extractUserName(userMessage);\r\n    if (possibleName) {\r\n      setConversationContext(prev => ({\r\n        ...prev,\r\n        userName: possibleName\r\n      }));\r\n    }\r\n    \r\n    // Extract user intent and entities for better understanding\r\n    const userIntent = detectIntent(userMessage);\r\n    const entities = extractEntities(userMessage);\r\n    console.log('User intent:', userIntent, 'Entities:', entities);\r\n\r\n    // Pre-process the user message for NLP matching\r\n    // eslint-disable-next-line no-unused-vars\r\n    const processedUserMessage = preprocessText(userMessage).join(' ');\r\n    \r\n    // Handle basic intents first\r\n    if (userIntent === 'greeting') {\r\n      updateConversationContext('greeting');\r\n      \r\n      if (typeof knowledgeBase.greeting.response === 'function') {\r\n        const response = knowledgeBase.greeting.response(conversationContext);\r\n        setSuggestedQuestions(knowledgeBase.greeting.followUpQuestions || []);\r\n        return response;\r\n      }\r\n      \r\n      setSuggestedQuestions(knowledgeBase.greeting.followUpQuestions || []);\r\n      return knowledgeBase.greeting.response;\r\n    }\r\n    \r\n    if (userIntent === 'farewell') {\r\n      updateConversationContext('goodbye');\r\n      setSuggestedQuestions(knowledgeBase.goodbye.followUpQuestions || []);\r\n      return knowledgeBase.goodbye.response;\r\n    }\r\n    \r\n    if (userIntent === 'gratitude') {\r\n      updateConversationContext('thanks');\r\n      setSuggestedQuestions(knowledgeBase.thanks.followUpQuestions || []);\r\n      return knowledgeBase.thanks.response;\r\n    }\r\n    \r\n    // Calculate similarity scores with all topics in the knowledge base\r\n    const similarityScores = extendedKnowledgeBase.map(entry => ({\r\n      topic: entry.topic,\r\n      similarity: calculateSimilarity(userMessage, entry.originalText)\r\n    }));\r\n    \r\n    // Sort by similarity (highest first)\r\n    similarityScores.sort((a, b) => b.similarity - a.similarity);\r\n    \r\n    console.log('Top matches:', similarityScores.slice(0, 3));\r\n    \r\n    // Use the best match if it's over the threshold\r\n    if (similarityScores[0].similarity > 0.15) {\r\n      const bestTopic = similarityScores[0].topic;\r\n      updateConversationContext(bestTopic);\r\n      \r\n      // Find the matched topic in the knowledge base\r\n      const matchedEntry = knowledgeBase[bestTopic];\r\n      \r\n      if (!matchedEntry) {\r\n        return t(\"I'm not sure I have information about that. Could you please ask something else?\", \"chatbot\");\r\n      }\r\n      \r\n      // Generate a contextual response based on the matched entry\r\n      setSuggestedQuestions(matchedEntry.followUpQuestions || []);\r\n      \r\n      if (typeof matchedEntry.response === 'function') {\r\n        return matchedEntry.response(conversationContext);\r\n      }\r\n      \r\n      // Generate personalized response using the context\r\n      const contextualResponse = generateContextualResponse(\r\n        userMessage, \r\n        matchedEntry.response, \r\n        conversationContext\r\n      );\r\n      \r\n      return contextualResponse || matchedEntry.response;\r\n    }\r\n    \r\n    // Handle specific cases that might not match well with similarity\r\n    \r\n    // Special handling for cancellation-related queries\r\n    if (/canc|cncl|cansl|ordr|orer|oredr/i.test(normalizedMessage)) {\r\n      updateConversationContext('cancellation');\r\n      setSuggestedQuestions(knowledgeBase.cancellation.followUpQuestions || []);\r\n      return knowledgeBase.cancellation.response;\r\n    }\r\n    \r\n    // New visitor greeting\r\n    if (isNewVisitorGreeting(userMessage)) {\r\n      updateConversationContext('greeting');\r\n      return t(\"Welcome to KSP Yarns! We're a leading manufacturer of high-quality yarns with a focus on sustainability. How can I help you today?\", \"chatbot\");\r\n    }\r\n    \r\n    // Default fallback response\r\n    return t(\"I'm not sure I understand. Could you please rephrase your question? I can help with information about our products, sustainability practices, ordering process, or company information.\", \"chatbot\");\r\n  }, [conversationContext, extractUserName, isNewVisitorGreeting, t, updateConversationContext]);\r\n\r\n  // Define handleSendMessage before it's used in handleKeyDown\r\n  const handleSendMessage = useCallback(() => {\r\n    if (!newMessage || newMessage.trim() === '') return;\r\n    \r\n    const messageId = Date.now();\r\n    const userMessageText = newMessage.trim();\r\n    const newMessageObject = {\r\n      id: messageId,\r\n      text: userMessageText,\r\n      sender: 'user',\r\n      timestamp: new Date(),\r\n      feedback: null,\r\n      reaction: null\r\n    };\r\n    \r\n    const isDuplicate = messages.some(msg => \r\n      msg.sender === 'user' && \r\n      msg.text === userMessageText && \r\n      (new Date().getTime() - new Date(msg.timestamp).getTime()) < 2000\r\n    );\r\n    \r\n    if (!isDuplicate) {\r\n      setMessages(prevMessages => [...prevMessages, newMessageObject]);\r\n    }\r\n    \r\n    setNewMessage('');\r\n    setIsTyping(true);\r\n    \r\n    // Optimized response time - reduced minimum delay\r\n    setTimeout(() => {\r\n      let responseText;\r\n      try {\r\n        responseText = findBotResponse(userMessageText) || \"I'm sorry, I couldn't process that request.\";\r\n        \r\n        const lastBotMessage = messages.filter(msg => msg.sender === 'bot').pop();\r\n        if (lastBotMessage && lastBotMessage.text === responseText) {\r\n          if (responseText.includes(\"Good\") && responseText.includes(\"Welcome to KSP Yarns\")) {\r\n            responseText = t(\"I see you're trying to ask something. Could you please be more specific? I can help with our products, ordering process, sustainability practices, and more.\", \"chatbot\");\r\n          } else {\r\n            responseText += \" \" + t(\"Was there something specific about this you'd like to know?\", \"chatbot\");\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error generating bot response:\", error);\r\n        responseText = \"Sorry, I encountered an error. Please try again.\";\r\n      }\r\n      \r\n      const botResponse = {\r\n        id: messageId + 1,\r\n        text: responseText,\r\n        sender: 'bot',\r\n        timestamp: new Date(),\r\n        feedback: null,\r\n        reaction: null\r\n      };\r\n      \r\n      setMessages(prevMessages => [...prevMessages, botResponse]);\r\n      setIsTyping(false);\r\n    }, 500 + Math.random() * 500); // Reduced response time for better responsiveness\r\n  }, [findBotResponse, newMessage, messages, t]); // Added 't' dependency\r\n\r\n  const handleKeyDown = useCallback((e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSendMessage();\r\n    }\r\n  }, [handleSendMessage]);\r\n\r\n  const getMessageGroups = useCallback(() => {\r\n    const groups = [];\r\n    let currentGroup = { date: null, messages: [] };\r\n\r\n    messages.forEach(message => {\r\n      try {\r\n        const messageTimestamp = message.timestamp instanceof Date ? \r\n          message.timestamp : new Date(message.timestamp);\r\n          \r\n        if (isNaN(messageTimestamp.getTime())) {\r\n          console.error('Invalid timestamp for message:', message);\r\n          return;\r\n        }\r\n        \r\n        const messageDate = messageTimestamp.toLocaleDateString();\r\n        \r\n        if (!currentGroup.date) {\r\n          currentGroup.date = messageDate;\r\n        } else if (currentGroup.date !== messageDate) {\r\n          groups.push({ ...currentGroup });\r\n          currentGroup = { date: messageDate, messages: [] };\r\n        }\r\n        \r\n        currentGroup.messages.push(message);\r\n      } catch (error) {\r\n        console.error('Error processing message:', error);\r\n      }\r\n    });\r\n    \r\n    if (currentGroup.date && currentGroup.messages.length > 0) {\r\n      groups.push(currentGroup);\r\n    }\r\n    \r\n    return groups;\r\n  }, [messages]);\r\n\r\n  const handleSuggestedQuestion = useCallback((question) => {\r\n    if (!question) return;\r\n    \r\n    const messageId = Date.now();\r\n    \r\n    const isDuplicate = messages.some(msg => \r\n      msg.sender === 'user' && \r\n      msg.text === question && \r\n      (new Date().getTime() - new Date(msg.timestamp).getTime()) < 2000\r\n    );\r\n    \r\n    if (isDuplicate) return;\r\n    \r\n    const userMessage = {\r\n      id: messageId,\r\n      text: question,\r\n      sender: 'user',\r\n      timestamp: new Date(),\r\n      feedback: null,\r\n      reaction: null\r\n    };\r\n    \r\n    setMessages(prevMessages => [...prevMessages, userMessage]);\r\n    setIsTyping(true);\r\n    \r\n    setTimeout(() => {\r\n      let responseText;\r\n      try {\r\n        responseText = findBotResponse(question) || \"I'm sorry, I couldn't process that request.\";\r\n        \r\n        const lastBotMessage = messages.filter(msg => msg.sender === 'bot').pop();\r\n        if (lastBotMessage && lastBotMessage.text === responseText) {\r\n          responseText = `${responseText.split('.')[0]}. ${t(\"Let me provide more details on this topic.\", \"chatbot\")} ${\r\n            responseText.split('.').slice(1).join('.')\r\n          }`;\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error generating bot response:\", error);\r\n        responseText = \"Sorry, I encountered an error. Please try again.\";\r\n      }\r\n      \r\n      const botResponse = {\r\n        id: messageId + 1,\r\n        text: responseText,\r\n        sender: 'bot',\r\n        timestamp: new Date(),\r\n        feedback: null,\r\n        reaction: null\r\n      };\r\n      \r\n      setMessages(prevMessages => [...prevMessages, botResponse]);\r\n      setIsTyping(false);\r\n    }, 1000 + Math.random() * 1000);\r\n  }, [findBotResponse, messages, t]);\r\n\r\n  const formatTimestamp = useCallback((timestamp) => {\r\n    try {\r\n      const date = timestamp instanceof Date ? timestamp : new Date(timestamp);\r\n      if (isNaN(date.getTime())) {\r\n        console.error(\"Invalid timestamp:\", timestamp);\r\n        return \"\";\r\n      }\r\n      return new Intl.DateTimeFormat('default', {\r\n        hour: 'numeric',\r\n        minute: 'numeric'\r\n      }).format(date);\r\n    } catch (error) {\r\n      console.error(\"Error formatting timestamp:\", error);\r\n      return \"\";\r\n    }\r\n  }, []);\r\n\r\n  const formatDateMarker = useCallback((date) => {\r\n    const today = new Date().toLocaleDateString();\r\n    const yesterday = new Date(Date.now() - 86400000).toLocaleDateString();\r\n    \r\n    if (date === today) return t(\"Today\", \"chatbot\");\r\n    if (date === yesterday) return t(\"Yesterday\", \"chatbot\");\r\n    return date;\r\n  }, [t]);\r\n\r\n  const startListening = useCallback(() => {\r\n    if ('SpeechRecognition' in window || 'webkitSpeechRecognition' in window) {\r\n      const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n      const recognition = new SpeechRecognition();\r\n      \r\n      recognition.lang = 'en-US';\r\n      recognition.continuous = false;\r\n      recognition.interimResults = false;\r\n      \r\n      recognition.onstart = () => {\r\n        setIsListening(true);\r\n      };\r\n      \r\n      recognition.onresult = (event) => {\r\n        const transcript = event.results[0][0].transcript;\r\n        setNewMessage(transcript);\r\n        setIsListening(false);\r\n      };\r\n      \r\n      recognition.onerror = () => {\r\n        setIsListening(false);\r\n      };\r\n      \r\n      recognition.onend = () => {\r\n        setIsListening(false);\r\n      };\r\n      \r\n      recognition.start();\r\n    } else {\r\n      alert(t(\"Speech recognition is not supported in your browser.\", \"chatbot\"));\r\n    }\r\n  }, [t]);\r\n\r\n  const handleMessageFeedback = useCallback((messageId, feedbackType) => {\r\n    setMessages(prevMessages => \r\n      prevMessages.map(message => \r\n        message.id === messageId \r\n          ? { ...message, feedback: feedbackType }\r\n          : message\r\n      )\r\n    );\r\n  }, []);\r\n  \r\n  const handleReactionClick = useCallback((messageId) => {\r\n    setShowEmojiPicker(showEmojiPicker === messageId ? null : messageId);\r\n  }, [showEmojiPicker]);\r\n  \r\n  const addReaction = useCallback((messageId, reactionType) => {\r\n    setMessages(prevMessages => \r\n      prevMessages.map(message => \r\n        message.id === messageId \r\n          ? { ...message, reaction: reactionType }\r\n          : message\r\n      )\r\n    );\r\n    setShowEmojiPicker(null);\r\n  }, []);\r\n  \r\n  const exportChatHistory = useCallback(() => {\r\n    const chatHistory = messages.map(msg => {\r\n      const sender = msg.sender === 'bot' ? 'KSP Assistant' : 'You';\r\n      const time = new Date(msg.timestamp).toLocaleString();\r\n      return `${time} - ${sender}: ${msg.text}`;\r\n    }).join('\\n\\n');\r\n    \r\n    const blob = new Blob([chatHistory], { type: 'text/plain' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `ksp-chat-${new Date().toISOString().slice(0, 10)}.txt`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  }, [messages]); // Removed 't' dependency\r\n\r\n  const clearChatHistory = useCallback(() => {\r\n    if (window.confirm(t(\"Are you sure you want to clear the chat history?\", \"chatbot\"))) {\r\n      const newId = Date.now();\r\n      setMessages([{\r\n        id: newId,\r\n        text: t(\"Hello! I'm KSP's AI assistant. How can I help you today?\", \"chatbot\"), \r\n        sender: 'bot', \r\n        timestamp: new Date(),\r\n        feedback: null,\r\n        reaction: null\r\n      }]);\r\n      \r\n      setConversationContext(prev => ({\r\n        ...prev,\r\n        lastTopic: null,\r\n        recentTopics: [],\r\n        messageCount: 0\r\n      }));\r\n      \r\n      localStorage.removeItem('kspChatHistory');\r\n    }\r\n  }, [t]); // Added 't' dependency\r\n\r\n  const copyToClipboard = useCallback((text) => {\r\n    if (!text) return;\r\n    \r\n    navigator.clipboard.writeText(text).then(() => {\r\n      setIsCopying(true);\r\n      setTimeout(() => setIsCopying(false), 2000);\r\n    });\r\n  }, []);\r\n\r\n  const speakMessage = useCallback((text) => {\r\n    if (!text) return;\r\n    \r\n    if ('speechSynthesis' in window) {\r\n      const utterance = new SpeechSynthesisUtterance(text);\r\n      window.speechSynthesis.speak(utterance);\r\n    } else {\r\n      alert(t(\"Text-to-speech is not supported in your browser.\", \"chatbot\"));\r\n    }\r\n  }, [t]);\r\n\r\n  const reactions = useMemo(() => ['👍', '👎', '❤️', '😊', '😮'], []);\r\n\r\n  return (\r\n    <>\r\n      <motion.button\r\n        className=\"fixed bottom-6 right-6 z-50 bg-gradient-to-r from-blue-600 to-blue-800 \r\n                   text-white p-4 rounded-full shadow-lg hover:shadow-xl\"\r\n        whileHover={{ scale: 1.1 }}\r\n        whileTap={{ scale: 0.9 }}\r\n        onClick={toggleChat}\r\n        aria-label={isOpen ? t(\"Close chat\", \"chatbot\") : t(\"Open chat\", \"chatbot\")}\r\n      >\r\n        {isOpen ? (\r\n          <FaTimes className=\"text-xl\" />\r\n        ) : (\r\n          <FaComments className=\"text-xl\" />\r\n        )}\r\n      </motion.button>\r\n\r\n      {/* Enhanced Robot greeting animation - more visible */}\r\n      <AnimatePresence>\r\n        {showGreeting && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 100, scale: 0 }}\r\n            animate={{ opacity: 1, y: 0, scale: 1 }}\r\n            exit={{ opacity: 0, y: 50, scale: 0.5 }}\r\n            transition={{ \r\n              type: \"spring\", \r\n              damping: 8,\r\n              stiffness: 100,\r\n              duration: 0.8\r\n            }}\r\n            className=\"fixed bottom-24 right-12 z-50 max-w-xs\"\r\n            style={{ pointerEvents: 'none' }} // Make sure it doesn't block interaction\r\n          >\r\n            {/* Thread connecting robot to bubble - made thicker and more visible */}\r\n            <motion.div \r\n              className=\"absolute bottom-0 left-8 w-2 bg-gradient-to-b from-blue-600 to-blue-400 rounded-full\"\r\n              initial={{ height: 0 }}\r\n              animate={{ height: 60 }}\r\n              transition={{ delay: 0.3, duration: 0.4 }}\r\n            />\r\n            \r\n            {/* Message bubble - larger and more colorful */}\r\n            <div className=\"relative\">\r\n              <motion.div \r\n                className=\"bg-gradient-to-r from-blue-700 to-blue-500 text-white p-6 rounded-xl rounded-bl-none shadow-xl\"\r\n                initial={{ y: 20, opacity: 0 }}\r\n                animate={{ y: 0, opacity: 1 }}\r\n                transition={{ delay: 0.6 }}\r\n              >\r\n                <div className=\"flex items-center space-x-2 mb-3\">\r\n                  <motion.div\r\n                    animate={{ rotate: [0, 15, -15, 0] }}\r\n                    transition={{ duration: 1, repeat: 3, repeatDelay: 0.5 }}\r\n                  >\r\n                    <FaRobot className=\"text-2xl\" />\r\n                  </motion.div>\r\n                  <span className=\"font-bold text-xl\">KSP Assistant</span>\r\n                </div>\r\n                <motion.p \r\n                  className=\"text-md font-medium\"\r\n                  initial={{ opacity: 0 }}\r\n                  animate={{ opacity: 1 }}\r\n                  transition={{ delay: 0.8 }}\r\n                >\r\n                  {t(\"Hi there! 👋 I'm your KSP Assistant! How can I help you today?\", \"chatbot\")}\r\n                </motion.p>\r\n                \r\n                {/* Animated arrow/indicator to chat button - larger and more obvious */}\r\n                <motion.div\r\n                  className=\"absolute right-2 bottom-[-30px]\"\r\n                  initial={{ x: 0 }}\r\n                  animate={{ x: [0, 15, 0], opacity: [0.5, 1, 0.5] }}\r\n                  transition={{ repeat: Infinity, duration: 1.5 }}\r\n                >\r\n                  <div className=\"text-blue-600 text-3xl font-bold\">\r\n                    ↓\r\n                  </div>\r\n                </motion.div>\r\n              </motion.div>\r\n              \r\n              {/* Animated robot icon - larger and more animated */}\r\n              <motion.div\r\n                initial={{ scale: 0 }}\r\n                animate={{ scale: 1, y: [0, -12, 0] }}\r\n                transition={{ \r\n                  scale: { delay: 0.2, duration: 0.5 },\r\n                  y: { repeat: Infinity, duration: 1.5, repeatType: \"reverse\" }\r\n                }}\r\n                className=\"absolute -left-10 -bottom-10 bg-gradient-to-r from-blue-700 to-blue-500 p-5 rounded-full text-white text-2xl shadow-lg border-4 border-white\"\r\n              >\r\n                <motion.div\r\n                  animate={{ rotateZ: [0, 15, -15, 0] }}\r\n                  transition={{ repeat: Infinity, duration: 2, repeatType: \"reverse\" }}\r\n                >\r\n                  <FaRobot />\r\n                </motion.div>\r\n              </motion.div>\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n\r\n      {/* Debug button - always visible for easier testing */}\r\n      <div className=\"fixed top-4 right-4 z-50\">\r\n        <button\r\n          onClick={() => {\r\n            localStorage.removeItem('kspGreetingShown');\r\n            localStorage.removeItem('kspChatOpenCount');\r\n            console.log('Manually showing greeting');\r\n            setShowGreeting(true);\r\n            setTimeout(() => setShowGreeting(false), 8000);\r\n          }}\r\n          className=\"bg-blue-500 text-white text-xs p-2 rounded shadow-md hover:bg-blue-600\"\r\n        >\r\n          Show Greeting\r\n        </button>\r\n      </div>\r\n\r\n      <AnimatePresence>\r\n        {isOpen && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 20, scale: 0.9 }}\r\n            animate={{ opacity: 1, y: 0, scale: 1 }}\r\n            exit={{ opacity: 0, y: 20, scale: 0.9 }}\r\n            transition={{ type: \"spring\", damping: 25, stiffness: 300 }}\r\n            className=\"fixed bottom-24 right-6 z-50 w-80 sm:w-96 h-[500px] max-h-[80vh]\r\n                       bg-white text-gray-800 rounded-2xl shadow-2xl overflow-hidden border border-gray-200\r\n                       flex flex-col\"\r\n            role=\"dialog\"\r\n            aria-labelledby=\"chat-title\"\r\n          >\r\n            <div className=\"bg-gradient-to-r from-blue-600 to-blue-800 text-white p-4\">\r\n              <div className=\"flex items-center\">\r\n                <div className=\"bg-white/20 p-2 rounded-full mr-3\">\r\n                  <FaRobot className=\"text-xl\" />\r\n                </div>\r\n                <div>\r\n                  <h3 className=\"font-bold\" id=\"chat-title\">{t(\"KSP Assistant\", \"chatbot\")}</h3>\r\n                  <p className=\"text-xs text-blue-100\">{t(\"Online | AI Powered\", \"chatbot\")}</p>\r\n                </div>\r\n                <div className=\"ml-auto flex\">\r\n                  <button \r\n                    onClick={exportChatHistory}\r\n                    className=\"bg-white/20 hover:bg-white/30 rounded-full p-2 transition-colors mr-2\"\r\n                    aria-label={t(\"Export chat history\", \"chatbot\")}\r\n                    title={t(\"Export chat history\", \"chatbot\")}\r\n                  >\r\n                    <FaVolumeUp className=\"text-sm\" />\r\n                  </button>\r\n                  <button \r\n                    onClick={clearChatHistory}\r\n                    className=\"bg-white/20 hover:bg-white/30 rounded-full p-2 transition-colors mr-2\"\r\n                    aria-label={t(\"Clear chat\", \"chatbot\")}\r\n                    title={t(\"Clear chat\", \"chatbot\")}\r\n                  >\r\n                    <FaTimes className=\"text-sm\" />\r\n                  </button>\r\n                  <button \r\n                    onClick={toggleChat}\r\n                    className=\"bg-white/20 hover:bg-white/30 rounded-full p-2 transition-colors\"\r\n                    aria-label={t(\"Close chat\", \"chatbot\")}\r\n                  >\r\n                    <FaTimes className=\"text-sm\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {visibleDateMarker && (\r\n              <div className=\"absolute top-16 left-1/2 transform -translate-x-1/2 z-10\">\r\n                <div className=\"bg-blue-600 text-white px-4 py-1 rounded-full text-xs shadow-md\">\r\n                  {formatDateMarker(visibleDateMarker)}\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            <div \r\n              ref={chatContainerRef}\r\n              className=\"flex-1 overflow-y-auto p-4 bg-gray-50\"\r\n              role=\"log\"\r\n              aria-live=\"polite\"\r\n            >\r\n              {getMessageGroups().map((group, groupIndex) => (\r\n                <div key={groupIndex}>\r\n                  <div \r\n                    className=\"flex justify-center my-3\"\r\n                    data-date-marker={group.date}\r\n                  >\r\n                    <div className=\"bg-gray-200 text-gray-600 px-3 py-1 rounded-full text-xs\">\r\n                      {formatDateMarker(group.date)}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  {group.messages.map((message) => (\r\n                    <motion.div\r\n                      key={message.id}\r\n                      initial={{ opacity: 0, y: 10 }}\r\n                      animate={{ opacity: 1, y: 0 }}\r\n                      transition={{ duration: 0.3 }}\r\n                      className={`mb-4 flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}\r\n                      role=\"article\"\r\n                      aria-label={`${message.sender === 'user' ? 'Your message' : 'Assistant message'}`}\r\n                    >\r\n                      <div\r\n                        className={`max-w-[80%] rounded-2xl px-4 py-2 ${\r\n                          message.sender === 'user'\r\n                            ? 'bg-blue-600 text-white rounded-tr-none'\r\n                            : 'bg-white text-gray-800 rounded-tl-none shadow-md border border-gray-100'\r\n                        } relative group`}\r\n                      >\r\n                        <p className=\"text-sm whitespace-pre-wrap\">\r\n                          {message.text ? \r\n                            message.text.split(/\\b((?:https?:\\/\\/|www\\.)[^\\s]+\\.[^\\s]+)\\b/).map((part, i) => {\r\n                              if (part && part.match && part.match(/^(https?:\\/\\/|www\\.)/)) {\r\n                                return (\r\n                                  <a \r\n                                    key={i} \r\n                                    href={part.startsWith('www.') ? `https://${part}` : part} \r\n                                    target=\"_blank\" \r\n                                    rel=\"noopener noreferrer\"\r\n                                    className=\"text-blue-300 hover:underline\"\r\n                                  >\r\n                                    {part}\r\n                                  </a>\r\n                                );\r\n                              } else {\r\n                                return part || '';\r\n                              }\r\n                            })\r\n                          : ''}\r\n                        </p>\r\n                        \r\n                        <div className=\"flex justify-between items-center mt-1\">\r\n                          <span className={`text-xs ${\r\n                            message.sender === 'user' \r\n                              ? 'text-blue-100' \r\n                              : 'text-gray-500'\r\n                          }`}>\r\n                            {formatTimestamp(message.timestamp)}\r\n                          </span>\r\n                          \r\n                          {message.reaction && (\r\n                            <span className=\"ml-2 text-xs\">\r\n                              {message.reaction}\r\n                            </span>\r\n                          )}\r\n                        </div>\r\n                        \r\n                        <div className={`absolute ${message.sender === 'user' ? 'left-0 -translate-x-full' : 'right-0 translate-x-full'} \r\n                                       top-1/2 -translate-y-1/2 bg-white rounded-lg shadow-md border border-gray-100 p-1\r\n                                       flex items-center opacity-0 group-hover:opacity-100 transition-opacity`}>\r\n                          \r\n                          {message.sender === 'bot' && (\r\n                            <>\r\n                              <button\r\n                                onClick={() => handleMessageFeedback(message.id, 'helpful')}\r\n                                className={`p-1 rounded-full ${message.feedback === 'helpful' ? 'text-green-600 bg-green-50' : 'text-gray-400 hover:text-green-600'}`}\r\n                                aria-label={t(\"Mark as helpful\", \"chatbot\")}\r\n                                title={t(\"Helpful\", \"chatbot\")}\r\n                              >\r\n                                <FaThumbsUp size={12} />\r\n                              </button>\r\n                              <button\r\n                                onClick={() => handleMessageFeedback(message.id, 'unhelpful')}\r\n                                className={`p-1 rounded-full ${message.feedback === 'unhelpful' ? 'text-red-600 bg-red-50' : 'text-gray-400 hover:text-red-600'}`}\r\n                                aria-label={t(\"Mark as unhelpful\", \"chatbot\")}\r\n                                title={t(\"Not helpful\", \"chatbot\")}\r\n                              >\r\n                                <FaThumbsDown size={12} />\r\n                              </button>\r\n                            </>\r\n                          )}\r\n                          \r\n                          {message.sender === 'bot' && (\r\n                            <button\r\n                              onClick={() => copyToClipboard(message.text)}\r\n                              className=\"p-1 rounded-full text-gray-400 hover:text-blue-600\"\r\n                              aria-label={t(\"Copy message\", \"chatbot\")}\r\n                              title={isCopying ? t(\"Copied!\", \"chatbot\") : t(\"Copy to clipboard\", \"chatbot\")}\r\n                            >\r\n                              <FaRegCopy size={12} />\r\n                            </button>\r\n                          )}\r\n                          \r\n                          <button\r\n                            onClick={() => speakMessage(message.text)}\r\n                            className=\"p-1 rounded-full text-gray-400 hover:text-blue-600\"\r\n                            aria-label={t(\"Speak message\", \"chatbot\")}\r\n                            title={t(\"Read aloud\", \"chatbot\")}\r\n                          >\r\n                            <FaVolumeUp size={12} />\r\n                          </button>\r\n                          \r\n                          <button\r\n                            onClick={() => handleReactionClick(message.id)}\r\n                            className=\"p-1 rounded-full text-gray-400 hover:text-blue-600\"\r\n                            aria-label={t(\"Add reaction\", \"chatbot\")}\r\n                            title={t(\"Add reaction\", \"chatbot\")}\r\n                          >\r\n                            <FaRegSmile size={12} />\r\n                          </button>\r\n                          \r\n                          {showEmojiPicker === message.id && (\r\n                            <div className=\"absolute top-full mt-1 bg-white shadow-lg rounded-lg border border-gray-200 p-1 z-10\">\r\n                              <div className=\"flex\">\r\n                                {reactions.map((emoji, i) => (\r\n                                  <button\r\n                                    key={i}\r\n                                    onClick={() => addReaction(message.id, emoji)}\r\n                                    className=\"p-1 hover:bg-gray-100 rounded\"\r\n                                  >\r\n                                    {emoji}\r\n                                  </button>\r\n                                ))}\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </div>\r\n                    </motion.div>\r\n                  ))}\r\n                </div>\r\n              ))}\r\n\r\n              {isTyping && (\r\n                <motion.div\r\n                  initial={{ opacity: 0, y: 10 }}\r\n                  animate={{ opacity: 1, y: 0 }}\r\n                  className=\"flex justify-start mb-4\"\r\n                  aria-live=\"polite\"\r\n                  aria-label={t(\"Bot is typing\", \"chatbot\")}\r\n                >\r\n                  <div className=\"bg-white text-gray-600 shadow-md border border-gray-100 rounded-2xl rounded-tl-none px-4 py-2\">\r\n                    <div className=\"flex space-x-2\">\r\n                      <motion.div\r\n                        animate={{ y: [0, -5, 0] }}\r\n                        transition={{ repeat: Infinity, duration: 0.6, repeatDelay: 0.2 }}\r\n                        className=\"w-2 h-2 bg-blue-600 rounded-full\"\r\n                      />\r\n                      <motion.div\r\n                        animate={{ y: [0, -5, 0] }}\r\n                        transition={{ repeat: Infinity, duration: 0.6, delay: 0.2, repeatDelay: 0.2 }}\r\n                        className=\"w-2 h-2 bg-blue-600 rounded-full\"\r\n                      />\r\n                      <motion.div\r\n                        animate={{ y: [0, -5, 0] }}\r\n                        transition={{ repeat: Infinity, duration: 0.6, delay: 0.4, repeatDelay: 0.2 }}\r\n                        className=\"w-2 h-2 bg-blue-600 rounded-full\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </motion.div>\r\n              )}\r\n\r\n              {isUserTyping && (\r\n                <motion.div\r\n                  initial={{ opacity: 0, y: 10 }}\r\n                  animate={{ opacity: 1, y: 0 }}\r\n                  className=\"flex justify-end mb-4\"\r\n                  aria-live=\"polite\"\r\n                  aria-label={t(\"You are typing\", \"chatbot\")}\r\n                >\r\n                  <div className=\"bg-blue-100 text-blue-600 rounded-2xl rounded-tr-none px-3 py-1 text-xs\">\r\n                    {t(\"typing...\", \"chatbot\")}\r\n                  </div>\r\n                </motion.div>\r\n              )}\r\n\r\n              {!isTyping && messages.length > 0 && messages[messages.length - 1].sender === 'bot' && (\r\n                <motion.div\r\n                  initial={{ opacity: 0, y: 10 }}\r\n                  animate={{ opacity: 1, y: 0 }}\r\n                  className=\"mb-4 mt-2\"\r\n                >\r\n                  <div className=\"flex items-center mb-2\">\r\n                    <FaLightbulb className=\"text-yellow-500 mr-2\" />\r\n                    <span className=\"text-xs text-gray-500\">\r\n                      {t(\"Suggested questions:\", \"chatbot\")}\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"flex flex-wrap gap-2\">\r\n                    {suggestedQuestions.map((question, index) => (\r\n                      <motion.button\r\n                        key={index}\r\n                        whileHover={{ scale: 1.03 }}\r\n                        whileTap={{ scale: 0.98 }}\r\n                        onClick={() => handleSuggestedQuestion(question)}\r\n                        className=\"bg-blue-50 text-blue-700 border border-blue-100 text-xs py-1 px-3 rounded-full hover:bg-blue-100\"\r\n                      >\r\n                        {question}\r\n                      </motion.button>\r\n                    ))}\r\n                  </div>\r\n                </motion.div>\r\n              )}\r\n              \r\n              <div ref={messagesEndRef} />\r\n            </div>\r\n\r\n            <div className=\"p-3 border-t bg-white border-gray-200\">\r\n              <div className=\"relative\">\r\n                <textarea\r\n                  ref={inputRef}\r\n                  value={newMessage}\r\n                  onChange={handleInputChange}\r\n                  onKeyDown={handleKeyDown}\r\n                  placeholder={t(\"Type your message...\", \"chatbot\")}\r\n                  className=\"w-full p-3 pr-20 bg-gray-100 text-gray-800 placeholder-gray-500 border-gray-200 \r\n                           border rounded-xl focus:outline-none focus:ring-2 focus:ring-blue-500 resize-none\"\r\n                  style={{ \r\n                    minHeight: '48px',\r\n                    maxHeight: '120px',\r\n                    height: Math.min(120, Math.max(48, newMessage && newMessage.split ? newMessage.split('\\n').length * 24 : 48)) + 'px'\r\n                  }}\r\n                  aria-label={t(\"Message input\", \"chatbot\")}\r\n                />\r\n                \r\n                <div className=\"absolute right-2 bottom-2 flex items-center space-x-1\">\r\n                  <motion.button\r\n                    whileHover={{ scale: 1.1 }}\r\n                    whileTap={{ scale: 0.9 }}\r\n                    onClick={startListening}\r\n                    className={`p-2 rounded-full ${\r\n                      isListening \r\n                        ? 'bg-red-500 text-white' \r\n                        : 'bg-gray-200 text-gray-600 hover:bg-gray-300'\r\n                    }`}\r\n                    disabled={isTyping}\r\n                    aria-label={isListening ? t(\"Stop listening\", \"chatbot\") : t(\"Start voice input\", \"chatbot\")}\r\n                    title={isListening ? t(\"Stop listening\", \"chatbot\") : t(\"Voice input\", \"chatbot\")}\r\n                  >\r\n                    <FaMicrophone className={isListening ? 'animate-pulse' : ''} />\r\n                  </motion.button>\r\n                  \r\n                  <motion.button\r\n                    whileHover={{ scale: 1.1 }}\r\n                    whileTap={{ scale: 0.9 }}\r\n                    onClick={handleSendMessage}\r\n                    className={`p-2 rounded-full ${\r\n                      newMessage.trim() === '' \r\n                        ? 'bg-blue-300 text-white cursor-not-allowed' \r\n                        : 'bg-blue-600 text-white hover:bg-blue-700'\r\n                    }`}\r\n                    disabled={newMessage.trim() === '' || isTyping}\r\n                    aria-label={t(\"Send message\", \"chatbot\")}\r\n                    title={t(\"Send message\", \"chatbot\")}\r\n                  >\r\n                    {isTyping ? (\r\n                      <FaSpinner className=\"animate-spin\" />\r\n                    ) : (\r\n                      <FaPaperPlane />\r\n                    )}\r\n                  </motion.button>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"text-center mt-2\">\r\n                <small className=\"text-xs text-gray-400\">\r\n                  {t(\"KSP's AI assistant helps with product inquiries and support\", \"chatbot\")}\r\n                </small>\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatBot;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}